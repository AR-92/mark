#!/bin/bash

# mark - Professional help command

# Main help function
show_help() {
    echo "MARK - AI Prompt Templating Tool v1.0.0"
    echo "========================================"
    echo ""
    echo "A powerful command-line tool for generating AI prompts from templates with dynamic placeholders,"
    echo "file inclusion, conditional logic, and iterative processing capabilities."
    echo ""
    echo "USAGE:"
    echo "    mark <COMMAND> [OPTIONS]"
    echo ""
    echo "CORE COMMANDS:"
    echo "    generate <template> [data]     Process template with optional data file"
    echo "    list                           Show recently generated prompts"
    echo "    clear                          Clear all log entries"
    echo "    config [action] [key] [value]  Manage tool configuration"
    echo "    template [action] [args]       Manage prompt templates"
    echo "    help                           Display this help information"
    echo ""
    echo "    version                        Show tool version information"
            echo "    upgrade                        Update to the latest version"
            echo "    uninstall                      Remove mark from your system"
            echo "    tui                            Launch full Terminal User Interface"
            echo ""
    echo "INTERACTIVE COMMANDS (require Gum):"
    echo "    generate interactive           Interactive prompt generation wizard"
    echo "    template interactive           Interactive template management"
    echo "    tui                            Launch full Terminal User Interface"
    echo ""
    echo "TEMPLATING FEATURES:"
    echo "    • Placeholders: {{variable_name}}"
    echo "    • File inclusion: {{@file_path}}"
    echo "    • Conditional blocks: {{#if condition}}...{{/if}}"
    echo "    • Loop/iteration blocks: {{#each array}}...{{/each}}"
    echo "    • Data files with key=value format"
    echo "    • Environment variable integration"
    echo ""
    echo "QUICK START EXAMPLES:"
    echo "    mark generate welcome_email.md user_data.txt"
    echo "    mark template list"
    echo "    mark template show welcome_email.md"
    echo "    mark config set editor vim"
    echo "    mark list"
    echo ""
    echo "For detailed command help: mark help <command>"
    echo "For TUI documentation: see TUI_DOCUMENTATION.md"
    echo "Documentation: https://github.com/AR-92/mark"
}

# Detailed help for specific commands
show_detailed_help() {
    case "$1" in
        generate|g)
            echo "MARK GENERATE"
            echo "============="
            echo ""
            echo "Process a template file with optional data to generate a prompt."
            echo ""
            echo "USAGE:"
            echo "    mark generate <template_file> [data_file] [OPTIONS]"
            echo "    mark generate interactive              Interactive mode (requires Gum)"
            echo ""
            echo "DESCRIPTION:"
            echo "    The generate command processes template files using the powerful mark templating engine."
            echo "    Templates can include placeholders, file inclusions, conditional blocks, and loops."
            echo ""
            echo "ARGUMENTS:"
            echo "    <template_file>    Path to the template file to process"
            echo "    [data_file]        Optional path to data file with key=value pairs"
            echo ""
            echo "OPTIONS:"
            echo "    --out <file>          Write output to specified file instead of stdout"
            echo "    --template-dir <dir>  Use additional template directory"
            echo ""
            echo "INTERACTIVE MODE:"
            echo "    If you have Gum installed, you can use the interactive mode:"
            echo "    mark generate interactive    Launch interactive prompt generation wizard"
            echo ""
            echo "EXAMPLES:"
            echo "    mark generate welcome_email.md"
            echo "    mark generate report_template.md data.txt"
            echo "    mark generate invoice.md --out final_invoice.md"
            echo "    mark generate interactive"
            echo "    mark g welcome_email.md user_data.txt"
            ;;
            
        template|t)
            echo "MARK TEMPLATE"
            echo "============="
            echo ""
            echo "Manage prompt templates used by the mark templating engine."
            echo ""
            echo "USAGE:"
            echo "    mark template <SUBCOMMAND> [ARGS] [OPTIONS]"
            echo ""
            echo "SUBCOMMANDS:"
            echo "    list                  List all available templates"
            echo "    show <name>           Display the content of a template"
            echo "    new <name>            Create a new template file"
            echo "    edit <name>           Edit an existing template"
            echo "    delete <name>         Remove a template file"
            echo "    rename <old> <new>    Rename a template file"
            echo ""
            echo "INTERACTIVE MODE:"
            echo "    If you have Gum installed, you can use the interactive mode:"
            echo "    mark template interactive     Launch interactive template manager"
            echo ""
            echo "OPTIONS:"
            echo "    --template-dir <dir>  Use specific template directory"
            echo "    --editor <editor>     Use specific editor for new/edit"
            echo ""
            echo "EXAMPLES:"
            echo "    mark template list"
            echo "    mark template show welcome_email.md"
            echo "    mark template new sales_pitch.md"
            echo "    mark template edit my_template.md"
            echo "    mark template delete old_template.md"
            echo "    mark template rename current_name.md new_name.md"
            echo "    mark template interactive"
            echo "    mark t list"
            ;;
            
        config|cfg)
            echo "MARK CONFIG"
            echo "==========="
            echo ""
            echo "Manage mark tool configuration settings."
            echo ""
            echo "USAGE:"
            echo "    mark config <SUBCOMMAND> [KEY] [VALUE]"
            echo ""
            echo "SUBCOMMANDS:"
            echo "    set <key> <value>     Set a configuration value"
            echo "    get <key>             Retrieve a configuration value"
            echo "    list                  Display all configuration values"
            echo ""
            echo "CONFIGURATION KEYS:"
            echo "    template_dirs         Template search directories (colon-separated)"
            echo "    default_template_dir  Default directory for new templates"
            echo "    editor                Default editor for template creation/editing"
            echo "    use_fzf               Enable fuzzy finder for template selection"
            echo "    data_file_formats     Supported data file formats (json,yaml,toml)"
            echo ""
            echo "EXAMPLES:"
            echo "    mark config set editor nvim"
            echo "    mark config set template_dirs \"~/.mark/templates:/usr/share/mark\""
            echo "    mark config get editor"
            echo "    mark config list"
            echo "    mark cfg set editor code"
            ;;
            
        list|l)
            echo "MARK LIST"
            echo "========="
            echo ""
            echo "Display recently generated prompts from the mark log."
            echo ""
            echo "USAGE:"
            echo "    mark list"
            echo ""
            echo "DESCRIPTION:"
            echo "    Shows a chronological list of recently generated prompts with timestamps."
            echo "    This helps track prompt generation history and outputs."
            echo ""
            echo "EXAMPLES:"
            echo "    mark list"
            echo "    mark l"
            ;;
            
        clear|c)
            echo "MARK CLEAR"
            echo "=========="
            echo ""
            echo "Clear all entries from the mark log file."
            echo ""
            echo "USAGE:"
            echo "    mark clear"
            echo ""
            echo "DESCRIPTION:"
            echo "    Removes all log entries from the mark log file, freeing disk space"
            echo "    and clearing the prompt generation history."
            echo ""
            echo "EXAMPLES:"
            echo "    mark clear"
            echo "    mark c"
            ;;
            
        version|v)
            echo "MARK VERSION"
            echo "============"
            echo ""
            echo "Display version information for the mark tool."
            echo ""
            echo "USAGE:"
            echo "    mark version"
            echo ""
            echo "DESCRIPTION:"
            echo "    Shows the current version of mark and build information."
            echo ""
            echo "EXAMPLES:"
            echo "    mark version"
            echo "    mark v"
            ;;
            
        tui)
            echo "MARK TUI"
            echo "======="
            echo ""
            echo "Launch the full Terminal User Interface dashboard for mark."
            echo ""
            echo "USAGE:"
            echo "    mark tui"
            echo ""
            echo "DESCRIPTION:"
            echo "    Opens a beautiful, interactive TUI dashboard that provides a complete"
            echo "    graphical interface for all mark functionality using Gum components."
            echo ""
            echo "REQUIREMENTS:"
            echo "    Gum must be installed for the TUI to function properly."
            echo "    Run setup_gum.sh if Gum is not installed."
            echo ""
            echo "FEATURES:"
            echo "    • Visual navigation menus with styled components"
            echo "    • Template management interface"
            echo "    • Prompt generation workflows"
            echo "    • Configuration management"
            echo "    • Help and documentation browser"
            echo "    • System operations (upgrade, uninstall)"
            echo ""
            echo "EXAMPLES:"
            echo "    mark tui"
            ;;
            
        upgrade|u)
            echo "MARK UPGRADE"
            echo "============"
            echo ""
            echo "Update mark to the latest version from the official repository."
            echo ""
            echo "USAGE:"
            echo "    mark upgrade"
            echo ""
            echo "DESCRIPTION:"
            echo "    Downloads and installs the latest version of mark from GitHub."
            echo "    Preserves existing templates and configuration during the update."
            echo ""
            echo "PROCESS:"
            echo "    1. Checks for the latest version availability"
            echo "    2. Backs up the current installation"
            echo "    3. Downloads the latest release"
            echo "    4. Installs the updated version"
            echo "    5. Verifies the installation"
            echo ""
            echo "EXAMPLES:"
            echo "    mark upgrade"
            echo "    mark u"
            ;;
            
        uninstall|un)
            echo "MARK UNINSTALL"
            echo "=============="
            echo ""
            echo "Completely remove mark from your system."
            echo ""
            echo "USAGE:"
            echo "    mark uninstall"
            echo ""
            echo "DESCRIPTION:"
            echo "    Removes all mark components from your system, including executables"
            echo "    and libraries. Optionally preserves user templates and configuration."
            echo ""
            echo "REMOVALS:"
            echo "    • Executable: $HOME/.local/bin/mark"
            echo "    • Libraries: $HOME/.local/lib/mark/"
            echo "    • Configuration: $HOME/.mark/ (optional)"
            echo ""
            echo "EXAMPLES:"
            echo "    mark uninstall"
            echo "    mark un"
            ;;
            
        help|h)
            echo "MARK HELP"
            echo "========="
            echo ""
            echo "Display help information for mark commands."
            echo ""
            echo "USAGE:"
            echo "    mark help [command]"
            echo ""
            echo "DESCRIPTION:"
            echo "    Shows general help information or detailed help for a specific command."
            echo ""
            echo "ARGUMENTS:"
            echo "    [command]    Optional command name for detailed help"
            echo ""
            echo "EXAMPLES:"
            echo "    mark help"
            echo "    mark help generate"
            echo "    mark help template"
            echo "    mark h config"
            ;;
            
        *)
            show_help
            ;;
    esac
}