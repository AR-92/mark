#!/bin/bash

# mark - Help command without colors or emojis

# Help function without colors or emojis
show_help() {
    echo "mark 1.0.0 - AI prompt templating tool"
    echo ""
    echo "USAGE"
    echo "    mark <COMMAND> [OPTIONS]"
    echo ""
    echo "COMMANDS"
    echo "    generate (g) <template> [data]    Generate prompt from template"
    echo "    list (l)                          List recently generated prompts"
    echo "    clear (c)                         Clear all logs"
    echo "    config (cfg) [set|get|list] [key] [value]  Manage configuration"
    echo "    template (t) [list|show|new|edit|delete|rename] [args]  Manage templates"
    echo "    upgrade (u)                       Upgrade mark to latest version"
    echo "    uninstall (un)                     Uninstall mark from your system"
    echo "    version (v)                       Show version information"
    echo "    help (h)                          Show this help message"
    echo ""
    echo "FEATURES"
    echo "    - Placeholders: {{variable_name}}"
    echo "    - File substitution: {{@file_path}}"
    echo "    - Data files: key=value format"
    echo "    - Environment variables"
    echo "    - Conditional blocks: {{#if condition}}...{{/if}}"
    echo "    - Loop blocks: {{#each array}}...{{/each}}"
    echo ""
    echo "EXAMPLES"
    echo "    mark generate my_template.md data.md"
    echo "    mark list"
    echo "    mark clear"
    echo "    mark config set editor nvim"
    echo "    mark cfg set editor nvim"
    echo "    mark config get editor"
    echo "    mark cfg get editor"
    echo "    mark config list"
    echo "    mark template list"
    echo "    mark t list"
    echo "    mark template show my_template.md"
    echo "    mark t show my_template.md"
    echo "    mark template new my_new_template"
    echo "    mark t new my_new_template"
    echo "    mark template edit my_template.md"
    echo "    mark t edit my_template.md"
    echo "    mark template delete my_template.md"
    echo "    mark t delete my_template.md"
    echo "    mark template rename old_name new_name"
    echo "    mark t rename old_name new_name"
    echo "    mark upgrade"
    echo "    mark u"
    echo "    mark uninstall"
    echo "    mark un"
    echo "    mark version"
    echo "    mark v"
    echo "    mark help"
    echo "    mark h"
    echo ""
    echo "For detailed help: mark help <command>"
}

# Detailed help for specific commands
show_detailed_help() {
    case "$1" in
        generate)
            echo "GENERATE - Create output from templates"
            echo ""
            echo "USAGE"
            echo "    mark generate <template_name> [data_file] [OPTIONS]"
            echo ""
            echo "DESCRIPTION"
            echo "    Generate output by processing a template with provided data."
            echo ""
            echo "OPTIONS"
            echo "    --out <file>          Write output to file instead of stdout"
            echo "    --template-dir <dir>  Use additional template directory"
            echo ""
            echo "EXAMPLES"
            echo "    mark generate welcome_email user_data.txt"
            echo "    mark generate report_template --out final_report.txt"
            echo "    mark generate invoice --template-dir ~/my-templates"
            ;;
        template)
            echo "TEMPLATE - Manage templates"
            echo ""
            echo "USAGE"
            echo "    mark template <SUBCOMMAND> [ARGS] [OPTIONS]"
            echo ""
            echo "SUBCOMMANDS"
            echo "    list                  List all templates"
            echo "    show <name>           Show template content"
            echo "    new <name>            Create new template"
            echo "    edit <name>           Edit existing template"
            echo "    delete <name>         Delete template"
            echo "    rename <old> <new>    Rename template"
            echo ""
            echo "OPTIONS"
            echo "    --template-dir <dir>  Use specific template directory"
            echo "    --editor <editor>     Use specific editor"
            echo "    --tag <tag>           Filter by or assign tags"
            echo ""
            echo "EXAMPLES"
            echo "    mark template list"
            echo "    mark template show welcome_email"
            echo "    mark template new sales_pitch"
            echo "    mark template edit my_template"
            echo "    mark template delete old_template"
            echo "    mark template rename current_name new_name"
            ;;
        config)
            echo "CONFIG - Manage configuration"
            echo ""
            echo "USAGE"
            echo "    mark config <SUBCOMMAND> [KEY] [VALUE]"
            echo ""
            echo "SUBCOMMANDS"
            echo "    set <key> <value>     Set configuration value"
            echo "    get <key>             Get configuration value"
            echo "    list                  List all configuration values"
            echo ""
            echo "CONFIGURABLE KEYS"
            echo "    template_dirs         List of template directories (colon-separated)"
            echo "    default_template_dir  Directory to use by default for new templates"
            echo "    editor                Default editor for template new/edit"
            echo "    use_fzf               Whether to use fuzzy finder when selecting templates"
            echo "    data_file_formats     Allowed formats for data input (json, yaml, toml)"
            echo ""
            echo "EXAMPLES"
            echo "    mark config set editor nvim"
            echo "    mark config set template_dirs \"~/.mark/templates:/usr/share/mark\""
            echo "    mark config get editor"
            echo "    mark config list"
            ;;
        upgrade)
            echo "UPGRADE - Upgrade mark to latest version"
            echo ""
            echo "USAGE"
            echo "    mark upgrade"
            echo ""
            echo "DESCRIPTION"
            echo "    Upgrade mark CLI tool to the latest version from GitHub."
            echo "    Your templates and configuration will be preserved."
            echo ""
            echo "WHAT THIS DOES"
            echo "    - Downloads latest version from GitHub"
            echo "    - Backs up current installation"
            echo "    - Installs new version"
            echo "    - Preserves templates and configuration"
            echo ""
            echo "EXAMPLES"
            echo "    mark upgrade"
            ;;
        uninstall)
            echo "UNINSTALL - Remove mark from your system"
            echo ""
            echo "USAGE"
            echo "    mark uninstall"
            echo ""
            echo "DESCRIPTION"
            echo "    Completely removes mark CLI tool from your system."
            echo ""
            echo "WHAT GETS REMOVED"
            echo "    - $HOME/.local/bin/mark"
            echo "    - $HOME/.local/lib/mark/"
            echo "    - Configuration files in $HOME/.mark/ (optional)"
            echo ""
            echo "EXAMPLES"
            echo "    mark uninstall"
            ;;
        *)
            show_help
            ;;
    esac
}